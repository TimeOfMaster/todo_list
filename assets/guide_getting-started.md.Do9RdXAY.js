import{_ as e,c as a,o as t,ae as i}from"./chunks/framework.B8KKhRA6.js";const k=JSON.parse('{"title":"Getting Started with ToDo List Manager","description":"","frontmatter":{},"headers":[],"relativePath":"guide/getting-started.md","filePath":"guide/getting-started.md"}'),n={name:"guide/getting-started.md"};function o(l,s,p,d,h,r){return t(),a("div",null,s[0]||(s[0]=[i(`<h1 id="getting-started-with-todo-list-manager" tabindex="-1">Getting Started with ToDo List Manager <a class="header-anchor" href="#getting-started-with-todo-list-manager" aria-label="Permalink to &quot;Getting Started with ToDo List Manager&quot;">​</a></h1><p>This guide will walk you through the process of setting up and effectively using the ToDo List Manager.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>To get started, you&#39;ll need Node.js and npm (Node Package Manager) installed on your system.</p><ol><li><p><strong>Clone the repository:</strong></p><p>Begin by cloning the project repository to your local machine:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">repository-ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> todo_list</span></span></code></pre></div></li><li><p><strong>Install dependencies:</strong></p><p>Navigate into the cloned directory and install the required project dependencies:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div></li></ol><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>Once installed, you can launch the ToDo List Manager directly from your terminal:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><p>The application will open in your terminal, displaying your current ToDo list.</p><h3 id="interactive-controls" tabindex="-1">Interactive Controls <a class="header-anchor" href="#interactive-controls" aria-label="Permalink to &quot;Interactive Controls&quot;">​</a></h3><p>The ToDo List Manager is designed to be fully interactive. Use the following keys to manage your tasks:</p><ul><li><p><code>n</code> (New Task): Press <code>n</code> to enter a new task. A prompt will appear at the bottom of the screen. Type your task and press <code>Enter</code> to add it to the list.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Enter new task... _</span></span></code></pre></div></li><li><p><code>e</code> (Edit Task): Select a task using the <code>Up</code> or <code>Down</code> arrow keys, then press <code>e</code> to edit its text. The selected task&#39;s text will appear in the input prompt. Modify the text and press <code>Enter</code> to save changes.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Edit task... [Your Task Text]_</span></span></code></pre></div></li><li><p><code>d</code> (Delete Task): Select the task you wish to delete using the <code>Up</code> or <code>Down</code> arrow keys, then press <code>d</code>. The selected task will be immediately removed from the list.</p></li><li><p><code>Enter</code> (Toggle Completion): With a task selected, press <code>Enter</code> to toggle its completion status. A <code>[ ]</code> indicates an incomplete task, while <code>[x]</code> indicates a completed task.</p></li><li><p><code>Up/Down Arrow</code> (Navigate): Use the arrow keys to move the selection cursor up and down your list of tasks.</p></li><li><p><code>Esc</code> (Exit): Press the <code>Esc</code> key at any time to exit the application. If you are in the middle of adding or editing a task, pressing <code>Esc</code> will cancel the current operation and return to the main view.</p></li></ul><h2 id="data-persistence" tabindex="-1">Data Persistence <a class="header-anchor" href="#data-persistence" aria-label="Permalink to &quot;Data Persistence&quot;">​</a></h2><p>Your ToDo list data is automatically saved to a file named <code>todos.json</code> in the root directory of the project. This ensures that your tasks are preserved even after you close the application.</p><ul><li><p><strong><code>todos.json</code></strong>: This file stores all your ToDo items in a JSON format. You should not manually edit this file unless you know what you are doing, as it can corrupt your data.</p><p>Example <code>todos.json</code> content:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1678886400000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Buy groceries&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;completed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1678886460000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Walk the dog&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;completed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div></li></ul>`,15)]))}const g=e(n,[["render",o]]);export{k as __pageData,g as default};
